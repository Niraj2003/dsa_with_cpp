Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-04-26T09:46:10+05:30

====== 1. Abstraction and Encapsulation ======
Created Sunday 26 April 2020

* **Encapsulation**: Binding data and relevant functions(behavior) together. **Achieved using Class.**
* **Abstraction: **Hiding unnecessary details. e.g TV, inbuilt sort() functions, STL - **Helps in trusted reuse.**
* We only need to know them, but not the implementation details.
* How to achieve it in OOPS: We have access specifiers viz **private, public **and** protected in C++ **do just this.
* Why do we want to do abstraction?
	1. We want to make a stable interface, i.e we may update the implementation and it won't affect the user's code. **Structure has not changed.**
	2. To avoid **errors**: Some constraints have to be in place according to context. e.g Dates cannot be negatives. We don't want to remember these constraints as a programmer.
