Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-04-26T10:15:59+05:30

====== 3. Inheritance:Syntax ======
Created Sunday 26 April 2020

**Syntax for inheritance** - Use '':'' symbol.
{{{code: lang="cpp" linenumbers="True"
class Camera{ /*code*/ };
class Telephone{ /*code*/ };

class Smartphone : private Camera, private Telephone
{ /*code*/ };
}}}

* There's no limit to the number of base(aka parent classes).
* Access specifiers are used to designate access level for inherited members from parent classes.
* Inheritance access controls follows a simple rule - accessibility cannot be increased.
{{./inheritance_access_control.png?width=600}}
* This is valid for generations of any length.
* Defaults access specifier is ''private'', i.e if not specified.
* : is just 'from' in inheritance
--------------------

==== Selective Inheritance ====
What if we want to inherit as ''public'', but keep some inherited members ''private''? 
C++ allows selective inheritance. Just use the ''using'' keyword.
Example
{{{code: lang="cpp" linenumbers="True"
#include <iostream>
using namespace std;

class A
{
	public:
    	void f(){}
    	void g();
    	void h();
};

// we want to inhertic h as public, rest as private

class B : private A
{
	public:
    	using A::f; // tagged as public
    	void f()
    	{
        	cout << "B::f called\n";
    	}
};

int main()
{
    B obj;
    obj.f(); // OK
}
}}}


